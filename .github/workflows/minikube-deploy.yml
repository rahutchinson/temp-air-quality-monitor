name: Deploy to Minikube

on:
  workflow_dispatch:
    inputs:
      device_url:
        description: 'PurpleAir device URL'
        required: true
        default: 'http://192.168.0.249/json'
      minikube_ip:
        description: 'Minikube IP address'
        required: true
        default: '192.168.49.2'

jobs:
  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Build application
      run: go build -o air-quality-monitor .

    - name: Build Docker image
      run: docker build -t air-quality-monitor:latest .

    - name: Update device URL in config
      run: |
        sed -i "s|http://192.168.0.249/json|${{ github.event.inputs.device_url }}|g" k8s/configmap.yaml

    - name: Create deployment package
      run: |
        mkdir -p deployment-package
        cp air-quality-monitor deployment-package/
        cp -r k8s deployment-package/
        cp Dockerfile deployment-package/
        cp go.mod go.sum deployment-package/
        cp README.md deployment-package/
        cp KUBERNETES.md deployment-package/
        cp setup-k8s.sh deployment-package/
        cp collect_data.sh deployment-package/
        cp test.sh deployment-package/

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deployment-package
        retention-days: 30

    - name: Generate deployment instructions
      run: |
        cat > deployment-instructions.md << EOF
        # Deployment Instructions
        
        ## Prerequisites
        - Docker installed and running
        - kubectl installed
        - minikube installed and running
        
        ## Quick Deploy
        
        1. Download the deployment package from the Actions artifacts
        2. Extract and navigate to the package directory
        3. Run the setup script:
           \`\`\`bash
           ./setup-k8s.sh
           \`\`\`
        4. Deploy the application:
           \`\`\`bash
           cd k8s
           ./deploy.sh
           \`\`\`
        5. Access the application:
           \`\`\`bash
           # Get minikube IP
           minikube ip
           
           # Access at: http://\$(minikube ip):30080
           \`\`\`
        
        ## Manual Deployment
        
        If you prefer manual deployment:
        
        \`\`\`bash
        # Build the image
        docker build -t air-quality-monitor:latest .
        
        # Load into minikube
        minikube image load air-quality-monitor:latest
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/persistent-volume.yaml
        kubectl apply -f k8s/persistent-volume-claim.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        \`\`\`
        
        ## Configuration
        
        The application is configured to connect to: ${{ github.event.inputs.device_url }}
        
        To change the device URL, edit \`k8s/configmap.yaml\` and restart the deployment:
        
        \`\`\`bash
        kubectl rollout restart deployment/air-quality-monitor -n air-quality-monitor
        \`\`\`
        
        ## Useful Commands
        
        \`\`\`bash
        # View logs
        kubectl logs -f deployment/air-quality-monitor -n air-quality-monitor
        
        # Check status
        kubectl get pods -n air-quality-monitor
        
        # Access dashboard
        minikube dashboard
        
        # Clean up
        cd k8s && ./cleanup.sh
        \`\`\`
        EOF

    - name: Upload deployment instructions
      uses: actions/upload-artifact@v4
      with:
        name: deployment-instructions
        path: deployment-instructions.md
        retention-days: 30
